# this is a snakefile for carrying out the assembly of:
# Species: Hypomesus transpacificus (delta smelt)
# Sex: female
# Data: -PacBio hifi
#       -10X Genomics linked reads (illumina)
#       -Phase hic (illumina)
#       -linkage map (Lew et al. 2015)


###############
###  SETUP  ###
###############
# override this with --configfile on command line
configfile: 'docs/conf_data_F.yml'
## load in configuration things
### general info
sex = config['sex']
species_id = config['speciesID']
genome_size = config['genomesize']
### raw data
hifi_file = config['hifi']
tenx_r1 = config['tenx_r1']
tenx_r2 = config['tenx_r2']
HIC_r1 = config['hic_r1']
HIC_r2 = config['hic_r2']
### other file inputs
lg_loci = config['lg_loci']
lg_tsv = config['lg_tsv']
### software
salsa_path = config['salsa_path']
chrmnmr_path = config['chromonomer_path']
### parameters
#### salsa2
i = config['i']

# other
prefix = species_id + '_' + sex



###############
###  r00lz  ###
###############
rule all:
    input:
        prefix + '.fa'

## SALSA2
#rule salsa_arima_mapping:
rule fake:
    output:
        's2_scaff10x/' + prefix + '.scf.fasta',
        's3_salsa2/arima/' + prefix + '_rep1.bam',
        's1_ipa/final.a_ctg.fasta'


rule salsa_fmt_index_asm:
    input:
        's2_scaff10x/' + prefix + '.scf.fasta'
    output:
        's2_scaff10x/' + prefix + '.scf.fasta.fai'
    conda: 'envs/bedsam.yml'
    shell:'''
        samtools faidx {input}
        '''

rule salsa_fmt_sort_bam:
    input:
        's3_salsa2/arima/' + prefix + '_rep1.bam'
    output:
        's3_salsa2/' + prefix + '_rep1.sort.bam'
    conda: 'envs/bedsam.yml'
    shell:'''
        samtools sort -O bam -o {output} {input}
        '''

rule salsa_fmt_bam_to_bed:
    input:
        's3_salsa2/' + prefix + '_rep1.sort.bam'
    output:
        's3_salsa2/' + prefix + '_rep1.bed'
    conda: 'envs/bedsam.yml'
    shell:'''
        bedtools bamtobed -i {input} > {output}
        '''

rule salsa_fmt_sort_bed:
    input:
        's3_salsa2/' + prefix + '_rep1.bed'
    output:
        's3_salsa2/' + prefix + '_rep1.sort.bed'
    shell:'''
        sort -k 4 {input} > {output}
        '''

rule salsa_run:
    input:
        asm = 's2_scaff10x/' + prefix + '.scf.fasta',
        dup = 's1_ipa/final.a_ctg.fasta', 
        hic = 's3_salsa2/' + prefix + '_rep1.sort.bed'
    output:
        's3_salsa2/out/scaffolds_FINAL.agp',
        's3_salsa2/out/scaffolds_FINAL.fasta'
    params:
        salsa_bin = salsa_path,
        genome_size = genome_size,
        i = i
    conda: 'envs/py2.yml'
    shell:'''
        python {params.salsa_bin}/run_pipeline.py -a {input.asm} -l {input.asm}.fai -b {input.hic} -s {params.genome_size} -i {params.i} -m yes -p yes -e GATC -x {input.dup} -o s3_salsa2/out
        '''

rule salsa_symlink:
    input:
        agp = 's3_salsa2/out/scaffolds_FINAL.agp',
        fasta = 's3_salsa2/out/scaffolds_FINAL.fasta'
    output:
        agp = 's3_salsa2/scaffolds_FINAL.agp',
        fasta = 's3_salsa2/scaffolds_FINAL.fasta'
    shell:'''
        [ -h {output.agp} ] | ln -s {input.agp} {output.agp}
        [ -h {output.fasta} ] | ln -s {input.fasta} {output.fasta}
        '''


## CHROMONOMER
rule chromonomer_fmt_salsa_agp:
    input:
        's3_salsa2/scaffolds_FINAL.agp'
    output:
        'd3_output/scaffolds_FINAL_no_white_ends.agp'
    shell:'''
        sed 's/[[:blank:]]*$//g' {input} > {output}
        '''

rule chromonomer_aln_lg_loci:
    input:
        fa = lg_loci,
        ref = 's3_salsa2/scaffolds_FINAL.fasta'
    output:
        'd3_output/' + prefix + '_loci.sort.bam'
    conda: 'envs/samtools.yml'
    shell:'''
        bwa mem {input.ref} {input.fa} | samtools view -Sb - | samtools sort -o {output}
        ''' 

rule chromonomer_index_alnmts:
    input:
        'd3_output/' + prefix + '_loci.sort.bam'
    output:
        'd3_output/' + prefix + '_loci.sort.bam.bai'
    conda: 'envs/samtools.yml'
    shell:'''
        samtools index {input}
        '''

rule chromonomer_run:
    input:
        tsv = lg_tsv,                                           # created from Lew et al. 2015 Supplemental B and loci mike found
        bam = 'd3_output/' + prefix + '_loci.sort.bam',         # linkage group loci aligned to SALSA2 output assembly
        bai = 'd3_output/' + prefix + '_loci.sort.bam.bai', 
        agp = 'd3_output/scaffolds_FINAL_no_white_ends.agp',    # output from SALSA2 with end of line whitespace taken out (sed 's/[[:blank:]]*$//g' <file>)
        fasta = 's3_salsa2/scaffolds_FINAL.fasta'               # output fasta from SALSA2 assembly (sym linked to salsa dir, rather than salsa/out/ dir)
    output:
        's4_chomonomer/CHRR_integrated.fa'                      # output fasta
    conda: 'conda/chrmnmr.yml'
    params:
        out_dir = 's4_chomonomer/'
    shell:'''
        chromonomer --verbose --map {input.tsv} --alns {input.bam} --agp {input.agp} --fasta {input.fasta} --out_path {params.out_dir}
        '''

## FINAL FORMAT
rule get_final_asm:
    input:
        's4_chomonomer/CHRR_integrated.fa'
    output:
        prefix + '.fa'
    shell:'''
        if [ -h {output} ]; then rm {output}; ln -s {input} {output}; else ln -s {input} {output}; fi
        '''
